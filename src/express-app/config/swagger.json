{
  "swagger": "2.0",
  "info": {
    "description": "Task 8",
    "version": "1.0.0",
    "title": "NodeJs Global Mentoring",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "nagasai_pallapotu@epam.com"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "Users"
    },
    {
      "name": "Products",
      "description": "Products"
    },
    {
      "name": "Cities",
      "description": "Cities"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns all users",
        "description": "Returns all users",
        "operationId": "allUsers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "xml": {
                      "name": "Name"
                    },
                    "example": "Sai"
                  },
                  "email": {
                    "type": "string",
                    "xml": {
                      "name": "Email"
                    },
                    "example": "sai@gmail.com"
                  }
                },
                "xml": {
                  "name": "Users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Deletes an User",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid status value",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns all products",
        "description": "Returns all products",
        "operationId": "allProducts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "example": "Jeans"
                },
                "brand": {
                  "type": "string",
                  "example": "Tommy"
                },
                "price": {
                  "type": "integer",
                  "example": "120"
                },
                "reviews": {
                  "type": "array",
                  "xml": {
                    "name": "reviews",
                    "wrapped": true
                  },
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "Products"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Adds a product",
        "description": "",
        "operationId": "addProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product Object to be added",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "photoUrls"],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jeans"
                },
                "brand": {
                  "type": "string",
                  "example": "Tommy"
                },
                "price": {
                  "type": "integer",
                  "example": "120"
                },
                "reviews": {
                  "type": "array",
                  "xml": {
                    "name": "reviews",
                    "wrapped": true
                  },
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "Products"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "example": "Jeans"
                },
                "brand": {
                  "type": "string",
                  "example": "Tommy"
                },
                "price": {
                  "type": "integer",
                  "example": "120"
                },
                "reviews": {
                  "type": "array",
                  "xml": {
                    "name": "reviews",
                    "wrapped": true
                  },
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "Products"
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": ["Products"],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getProductById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "example": "Jeans"
                },
                "brand": {
                  "type": "string",
                  "example": "Tommy"
                },
                "price": {
                  "type": "integer",
                  "example": "120"
                },
                "reviews": {
                  "type": "array",
                  "xml": {
                    "name": "reviews",
                    "wrapped": true
                  },
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "Products"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Deletes a product",
        "description": "",
        "operationId": "deleteProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/{productId}/reviews": {
      "get": {
        "tags": ["Products"],
        "summary": "Find product reviews by ID",
        "description": "Returns a single product reviews",
        "operationId": "getProductReviewsById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return reviews",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "example": "Jeans"
                },
                "brand": {
                  "type": "string",
                  "example": "Tommy"
                },
                "price": {
                  "type": "integer",
                  "example": "120"
                },
                "reviews": {
                  "type": "array",
                  "xml": {
                    "name": "reviews",
                    "wrapped": true
                  },
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "Products"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/cities": {
      "get": {
        "tags": ["Cities"],
        "summary": "Returns all cities",
        "description": "Returns all cities",
        "operationId": "allCities",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "xml": {
                      "name": "Name"
                    },
                    "example": "Minsk"
                  },
                  "country": {
                    "type": "string",
                    "xml": {
                      "name": "Country"
                    },
                    "example": "Belarus"
                  },
                  "capital": {
                    "type": "boolean",
                    "xml": {
                      "name": "Capital"
                    },
                    "example": true
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "integer",
                        "example": 123.45
                      },
                      "long": {
                        "type": "integer",
                        "example": 123.45
                      }
                    }
                  }
                },
                "xml": {
                  "name": "Users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "post": {
        "tags": ["Cities"],
        "summary": "Adds a City",
        "description": "",
        "operationId": "addCity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "City Object to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "xml": {
                    "name": "Name"
                  },
                  "example": "Minsk"
                },
                "country": {
                  "type": "string",
                  "xml": {
                    "name": "Country"
                  },
                  "example": "Belarus"
                },
                "capital": {
                  "type": "boolean",
                  "xml": {
                    "name": "Capital"
                  },
                  "example": true
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "integer",
                      "example": 123.45
                    },
                    "long": {
                      "type": "integer",
                      "example": 123.45
                    }
                  }
                }
              },
              "xml": {
                "name": "Users"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "xml": {
                    "name": "Name"
                  },
                  "example": "Minsk"
                },
                "country": {
                  "type": "string",
                  "xml": {
                    "name": "Country"
                  },
                  "example": "Belarus"
                },
                "capital": {
                  "type": "boolean",
                  "xml": {
                    "name": "Capital"
                  },
                  "example": true
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "integer",
                      "example": 123.45
                    },
                    "long": {
                      "type": "integer",
                      "example": 123.45
                    }
                  }
                }
              },
              "xml": {
                "name": "Cities"
              }
            }
          }
        }
      }
    },
    "/cities/{cityId}": {
      "delete": {
        "tags": ["Cities"],
        "summary": "Deletes a city",
        "description": "",
        "operationId": "deleteCity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "City id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "City not found"
          }
        }
      },
      "put": {
        "tags": ["Cities"],
        "summary": "Updates a City",
        "description": "",
        "operationId": "updateCity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "City id to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "City Object to be Updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "xml": {
                    "name": "Name"
                  },
                  "example": "Minsk"
                },
                "country": {
                  "type": "string",
                  "xml": {
                    "name": "Country"
                  },
                  "example": "Belarus"
                },
                "capital": {
                  "type": "boolean",
                  "xml": {
                    "name": "Capital"
                  },
                  "example": true
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "integer",
                      "example": 123.45
                    },
                    "long": {
                      "type": "integer",
                      "example": 123.45
                    }
                  }
                }
              },
              "xml": {
                "name": "Cities"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "xml": {
                    "name": "Name"
                  },
                  "example": "Minsk"
                },
                "country": {
                  "type": "string",
                  "xml": {
                    "name": "Country"
                  },
                  "example": "Belarus"
                },
                "capital": {
                  "type": "boolean",
                  "xml": {
                    "name": "Capital"
                  },
                  "example": true
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "integer",
                      "example": 123.45
                    },
                    "long": {
                      "type": "integer",
                      "example": 123.45
                    }
                  }
                }
              },
              "xml": {
                "name": "Users"
              }
            }
          }
        }
      }
    }
  }
}
